# Caching the library name to be used in the parent scope.
set(SCAN_AREAS_PROCESSOR "sam_scan_areas_processor" CACHE STRING "SAM pathl generator library name.")

file(GLOB SCAN_AREAS_PROCESSOR_HPP_FILES 
    ${CMAKE_CURRENT_SOURCE_DIR}/scanareasprocessor.hpp
)

file(GLOB SCAN_AREAS_PROCESSOR_CPP_FILES 
    ${CMAKE_CURRENT_SOURCE_DIR}/scanareasprocessor.cpp
)

# Safety check: Ensure that all the files exist.
foreach(file ${SCAN_AREAS_PROCESSOR_CPP_FILES} ${SCAN_AREAS_PROCESSOR_HPP_FILES})
    if(NOT EXISTS "${file}")
        message(FATAL_ERROR "File '${file}' does not exist!")
    endif()
endforeach()

add_library(${SCAN_AREAS_PROCESSOR} SHARED  
    ${SCAN_AREAS_PROCESSOR_CPP_FILES} 
)

set_target_properties(${SCAN_AREAS_PROCESSOR} PROPERTIES VERSION ${SAM_PROJECT_VERSION})

target_include_directories(${SCAN_AREAS_PROCESSOR} PUBLIC 
    "${CMAKE_CURRENT_SOURCE_DIR}/" 
)

# Install the library.
# This is for CPack to be able to package the library.
install(TARGETS ${SCAN_AREAS_PROCESSOR} RUNTIME DESTINATION .)
