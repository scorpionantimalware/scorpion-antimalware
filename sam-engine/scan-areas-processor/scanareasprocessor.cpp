/**********************************************************************************/
/*                                                                                */
/* scanareasprocessor.cpp                                                         */
/*                                                                                */
/**********************************************************************************/
/*                                                                                */
/*    Scorpion Anti-malware is a free Open Source AI-powered Anti-malware         */
/*    framework for Researchers.                                                  */
/*                                                                                */
/*    Copyright (c) 2024-present  (see AUTHORS.md).                               */
/*                                                                                */
/*    This program is free software: you can redistribute it and/or modify        */
/*    it under the terms of the GNU General Public License as published by        */
/*    the Free Software Foundation, either version 3 of the License, or           */
/*    (at your option) any later version.                                         */
/*                                                                                */
/*    This program is distributed in the hope that it will be useful,             */
/*    but WITHOUT ANY WARRANTY; without even the implied warranty of              */
/*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               */
/*    GNU General Public License for more details.                                */
/*                                                                                */
/*    You should have received a copy of the GNU General Public License           */
/*    along with this program.  If not, see <https://www.gnu.org/licenses/>.      */
/*                                                                                */
/**********************************************************************************/

#include "scanareasprocessor.hpp"

#include <fstream>
#include <iostream>
#include <string>

#include <filesystem>

namespace fs = std::filesystem;

bool ScanAreasProcessor::load_or_init(pathls &scan_areas) {
	bool status{ false };

	std::ifstream scan_areas_file(SCAN_AREAS_FILENAME);

	if (!scan_areas_file.is_open()) {
		std::cout << "Info: Creating a new scan areas file" << std::endl;
		std::ofstream scan_areas_output_file(SCAN_AREAS_FILENAME);
		if (!scan_areas_output_file.is_open()) {
			std::cout << "Error: Failed to create scan areas file" << std::endl;
		}
		scan_areas_output_file.close();
		status = true;
		return status;
	}

	std::cout << "Info: Loading scan areas from existing file" << std::endl;
	std::string scan_area;
	while (std::getline(scan_areas_file, scan_area)) {
		if (!fs::is_directory(scan_area)) {
			std::cout << "Error: Scan area " << scan_area << " does not exist" << std::endl;
			continue;
		}

		scan_areas.emplace_back(scan_area);
	}

	scan_areas_file.close();

	status = true;
	return status;
}

bool ScanAreasProcessor::add_area(const std::string &area) {
	bool status{ false };

	if (!fs::is_directory(area)) {
		std::cout << "Error: Scan area " << area << " does not exist" << std::endl;
		return status;
	}

	std::ofstream scan_areas_file(SCAN_AREAS_FILENAME, std::ios::app);
	if (!scan_areas_file.is_open()) {
		std::cout << "Error: Failed to open scan areas file" << std::endl;
		return status;
	}

	scan_areas_file << area << std::endl;
	scan_areas_file.close();

	status = true;
	return status;
}
