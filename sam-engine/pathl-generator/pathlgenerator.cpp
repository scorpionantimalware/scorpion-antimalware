#include "pathlgenerator.h"

#include "pathlcollector.h"

#include <fstream>
#include <iostream>

bool PathlGenerator::generate(const std::string& scan_area) {
    bool status {false};
    PathlCollector collector;
    pathls pathls_buffer;
    status = collector.collect(pathls_buffer, scan_area);
    if (!status) {
        return status;
    }

    const std::string output_file = "output.pathl";

    std::ofstream outfile(output_file);
    if (!outfile.is_open()) {
        std::cout << "Error: Unable to open file: " << output_file << std::endl;
        return status;
    }

    for (const auto& path : pathls_buffer) {
        outfile << path << "\n";
    }

    outfile.close();

    status = true;

    return status;
}
