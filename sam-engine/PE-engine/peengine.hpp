#ifndef SAM_PE_ENGINE_H
#define SAM_PE_ENGINE_H

/**
 * @brief The directory containing the Python module
*/
#ifndef PE_ENGINE_SCRIPTS_DIR
#error "PE_ENGINE_SCRIPTS_DIR is not defined"
#endif // PE_ENGINE_SCRIPTS_DIR

/**
 * @brief The standardize parameters for the ANN model
*/
#ifndef SAM_STATIC_ANN_STANDARDIZE_PARAMS
#error "SAM_STATIC_ANN_STANDARDIZE_PARAMS is not defined"
#endif // SAM_STATIC_ANN_STANDARDIZE_PARAMS

// // It is recommended to always define PY_SSIZE_T_CLEAN before including Python.h. See https://docs.python.org/3/c-api/arg.html#arg-parsing for a description of this macro.
// #define PY_SSIZE_T_CLEAN

// // Since Python may define some pre-processor definitions which affect the standard headers on some systems, you must include Python.h before any standard headers are included.
// #include <Python.h>

#include <pybind11/embed.h>
namespace py = pybind11;

#include <string>

class PEEngine {
 public:
  PEEngine();
  ~PEEngine();

  bool init();

  /**
   * @brief Get the PE features of a file
   * 
   * @note The number of features returned is 2381.
   * 
   * @param pe_file_path The path to the file
   * 
   * @return The PE features of the file
  */
  bool get_pe_features(const std::string& pe_file_path, std::vector<float>& features_buffer);

  private:
  PyObject* pModule;
  PyObject* pFunc;
}; // class PEEngine

#endif // SAM_PE_ENGINE_H
