import win32evtlog

def collect_logs(log_type, server=None):
    # Define the log types
    log_types = {
        'system': win32evtlog.System,
        'application': win32evtlog.Application,
        'security': win32evtlog.Security,
        'dns server': win32evtlog.DNSServer,
        # Add more log types as needed
    }

    if log_type.lower() not in log_types:
        print("Invalid log type. Available log types: ", list(log_types.keys()))
        return

    # Open the event log
    log_handle = win32evtlog.OpenEventLog(server, log_type)
    
    # Read the events
    try:
        events = 1
        while events:
            events = win32evtlog.ReadEventLog(log_handle, win32evtlog.EVENTLOG_BACKWARDS_READ | win32evtlog.EVENTLOG_SEQUENTIAL_READ, 0)
            for event in events:
                event_record = event.StringInserts
                print(event_record)
    except Exception as e:
        print("Error:", e)
    finally:
        win32evtlog.CloseEventLog(log_handle)

# Example usage
if __name__ == "__main__":
    # Specify the log type and server (optional)
    collect_logs('system', server=None)
