# Description: This script is used to build a process tree and print it out. but it does not work yet.


import psutil

def build_process_tree():
    # Dictionary to store process tree
    process_tree = {}

    # Iterate through all processes
    for proc in psutil.process_iter(attrs=['pid', 'name', 'ppid']):
        pid = proc.info['pid']
        name = proc.info['name']
        ppid = proc.info['ppid']

        # Add process to process tree
        if ppid not in process_tree:
            process_tree[ppid] = []
        process_tree[ppid].append((pid, name))

    return process_tree

def print_process_tree(process_tree, pid, level=0):
    if pid in process_tree:
        for child in process_tree[pid]:
            child_pid, child_name = child
            print("  " * level + f"- {child_name} ({child_pid})")
            print_process_tree(process_tree, child_pid, level + 1)

if __name__ == "__main__":
    print("Building process tree...")
    process_tree = build_process_tree()

    print("Process Tree:")
    print_process_tree(process_tree, 0)



