###################################################################################
#                                                                                 #
# download_json_from_cuckoo.py                                                    #
#                                                                                 #
###################################################################################
#                                                                                 #
#    Scorpion Anti-malware is a free Open Source AI-powered Anti-malware          #
#    framework for Researchers.                                                   #
#                                                                                 #
#    Copyright (c) 2024-present  (see AUTHORS.md).                                #
#                                                                                 #
#    This program is free software: you can redistribute it and/or modify         #
#    it under the terms of the GNU General Public License as published by         #
#    the Free Software Foundation, either version 3 of the License, or            #
#    (at your option) any later version.                                          #
#                                                                                 #
#    This program is distributed in the hope that it will be useful,              #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of               #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
#    GNU General Public License for more details.                                 #
#                                                                                 #
#    You should have received a copy of the GNU General Public License            #
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.       #
#                                                                                 #
###################################################################################


from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
import time

path_to_save = ""
path_to_still = ""

chrome_options = Options()
chrome_options.add_argument("--window-size=1920,1080")
chrome_options.add_experimental_option("prefs", {"safebrowsing.enabled": True})

driver = webdriver.Chrome(options=chrome_options)

with open(path_to_save, "r") as file:
    with open(path_to_still, "a") as still:
        while True:
            line = file.readline()

            if not line:
                break

            data = line.split(",")
            task_id = data[0].strip()
            filename = data[1].strip()

            driver.get(f"https://cuckoo.cert.ee/analysis/{task_id}/export/")
            driver.implicitly_wait(60)

            time.sleep(1)

            not_ready = False

            while True:
                try:
                    temp = driver.find_elements(By.CLASS_NAME, "app-error__header")

                    if len(temp) > 0:
                        print(f"Task ID {task_id} is not done yet. Writing to still.txt...\n")
                        still.write(line)
                        still.flush()
                        not_ready = True

                    break
                except Exception as e:
                    print(e)
                    time.sleep(1)
                    continue

            if not_ready:
                continue

            time.sleep(1)

            while True:
                try:
                    # Reported
                    buttons = driver.find_elements(By.CLASS_NAME, "cuckoo-box-primary")
                    for button in buttons:
                        if not button.text.split(" ")[0] == "reports":
                            button.click()
                        time.sleep(0.2)
                    break
                except Exception as e:
                    print(e)
                    time.sleep(1)
                    continue

            time.sleep(1)

            while True:
                try:
                    b1 = None
                    b1 = driver.find_element(By.XPATH, '//*[@id="options"]/div/div[3]/div[2]/button')

                    if b1 == None:
                        raise Exception("Button 1 not found")

                    b1.click()

                    break
                except Exception as e:
                    print(e)
                    time.sleep(1)
                    continue

            time.sleep(1)

driver.quit()
