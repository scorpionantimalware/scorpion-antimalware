from scapy.all import sniff

# def packet_callback(packet):
#     if packet.haslayer("IP"):
#         src_ip = packet["IP"].src
#         dst_ip = packet["IP"].dst
#         print(f"Source IP: {src_ip} --> Destination IP: {dst_ip}")

# # Sniff packets on the default interface (usually eth0 on Linux)
# # You can specify interface by passing iface argument to sniff function
# sniff(prn=packet_callback, store=0, iface='Wi-Fi')


from scapy.all import sniff

def packet_callback(packet):
    print(packet.summary())  # Print a summary of the packet

# Sniff packets on the default interface (usually eth0 on Linux)
# You can specify interface by passing iface argument to sniff function
sniff(prn=packet_callback, store=0, iface='Wi-Fi')