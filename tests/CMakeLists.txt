set(SAM_ENGINE_TESTS "sam-engine-tests")

file(GLOB SAM_ENGINE_TESTS_SRC_FILES 
    ${CMAKE_CURRENT_SOURCE_DIR}/testsmain.h
    ${CMAKE_CURRENT_SOURCE_DIR}/testsmain.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/samenginetests.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/byte-pixel-engine/bytepixelenginetests.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/pathl-generator/pathlgeneratortests.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/pathl-generator/pathlcollectortests.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/PE-engine/peenginetests.cpp
)

# TODO: Is this needed?
enable_testing()

# Check https://cmake.org/cmake/help/latest/module/FindGTest.html for more information.
find_package(GTest REQUIRED)

add_executable(${SAM_ENGINE_TESTS} ${SAM_ENGINE_TESTS_SRC_FILES})

set_target_properties(${SAM_ENGINE_TESTS} PROPERTIES VERSION ${SAM_PROJECT_VERSION})

# You can use GTEST_BOTH_LIBRARIES which contains both gtest and gtest_main instead of GTEST_LIBRARIES and GTEST_MAIN_LIBRARIES.
# The GTEST_BOTH_LIBRARIES, GTEST_LIBRARIES, and GTEST_MAIN_LIBRARIES variables comes from the find_package(GTest) call above.
target_link_libraries(${SAM_ENGINE_TESTS} PRIVATE 
    ${GTEST_LIBRARIES}
    ${GTEST_MAIN_LIBRARIES}
    ${SAM_ENGINE} 
)

# When we use any header inside ${SAM_ENGINE_TESTS}, it must know where these headers are.
# The GTEST_INCLUDE_DIRS variable comes from the find_package(GTest) call above.
target_include_directories(${SAM_ENGINE_TESTS} PRIVATE 
    "${CMAKE_CURRENT_SOURCE_DIR}/" 
    "${GTEST_INCLUDE_DIRS}/" 
)

# Specify the directory containing the shared libraries.
set(PE_ENGINE_LIB_DIR "${PROJECT_BINARY_DIR}/sam-engine/PE-engine/Debug")
set(BYTE_PIXEL_ENGINE_LIB_DIR "${PROJECT_BINARY_DIR}/sam-engine/byte-pixel-engine/Debug")
set(SAM_PATHL_GENERATOR_LIB_DIR "${PROJECT_BINARY_DIR}/sam-engine/pathl-generator/Debug")
set(SAM_ENGINE_LIB_DIR "${PROJECT_BINARY_DIR}/sam-engine/Debug")

# TODO: Why copy_if_different isn't working?
# Copy the shared libraries to the executable directory.
file(GLOB SAM_DLLS 
    "${PE_ENGINE_LIB_DIR}/${PE_ENGINE}.dll"
    "${BYTE_PIXEL_ENGINE_LIB_DIR}/${BYTE_PIXEL_ENGINE}.dll"
    "${SAM_PATHL_GENERATOR_LIB_DIR}/${SAM_PATHL_GENERATOR}.dll"
    "${SAM_ENGINE_LIB_DIR}/${SAM_ENGINE}.dll"
)
foreach(SAM_DLL ${SAM_DLLS})
    add_custom_command(TARGET ${SAM_ENGINE_TESTS} POST_BUILD
                    COMMAND ${CMAKE_COMMAND} -E copy ${SAM_DLL} $<TARGET_FILE_DIR:${SAM_ENGINE_TESTS}>
                    COMMENT "Copying ${SAM_DLL} to the executable directory."
    )
endforeach()

# Copy the onnx dlls to the executable directory.
if (MSVC)
    file(GLOB ORT_DLLS 
        "${ONNXRUNTIME_ROOTDIR}/lib/onnxruntime.dll"
        "${ONNXRUNTIME_ROOTDIR}/lib/onnxruntime_providers_shared.dll"
    )
    foreach(ORT_DLL ${ORT_DLLS})
        add_custom_command(TARGET ${SAM_ENGINE_TESTS} POST_BUILD
                        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${ORT_DLL}  $<TARGET_FILE_DIR:${SAM_ENGINE_TESTS}>
                        COMMENT "Copying ${ORT_DLL} to the executable directory."
        )
    endforeach()
endif()

# Copy the model to the executable directory.
file(GLOB SAM_MODELS 
    "${STATIC_ANN_ONNX_MODELPATH}"
    # "${STATIC_CNN_ONNX_MODELPATH}"
)
foreach(SAM_MODEL ${SAM_MODELS})
    add_custom_command(TARGET ${SAM_ENGINE_TESTS} POST_BUILD
                    COMMAND ${CMAKE_COMMAND} -E copy_if_different ${SAM_MODEL} $<TARGET_FILE_DIR:${SAM_ENGINE_TESTS}>
                    COMMENT "Copying ${SAM_MODEL} to the executable directory."
    )
endforeach()

# TODO: Why is this needed?
add_test(NAME ${SAM_ENGINE_TESTS} COMMAND ${SAM_ENGINE_TESTS})
