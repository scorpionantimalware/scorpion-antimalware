cmake_minimum_required(VERSION 3.5)

if (CMAKE_BUILD_TYPE MATCHES "Debug")
    set(SAM_PROJECT_NAME "scorpion-antimalware-debug")
    add_definitions(-DSCORPION_ANTIMALWARE_DEBUG)
else()
    set(SAM_PROJECT_NAME "scorpion-antimalware")
endif()

set(SAM_PROJECT_VERSION "1.0.0")
set(SAM_PROJECT_DESCRIPTION "Scorpion Anti-malware")

project(${SAM_PROJECT_NAME} VERSION ${SAM_PROJECT_VERSION} LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

message(STATUS "Building Scorpion Anti-malware engine as a library...")
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/)

#################################################
#
# Scorpion Anti-malware Tests
#
#################################################

option(BUILD_TESTS "Builds Scorpion Anti-malware console and links the engine." OFF)

if (BUILD_TESTS)
    message(STATUS "Building Scorpion Anti-malware tests...")
    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/tests/)
endif()

#################################################
#
# Scorpion Anti-malware Console
#
#################################################

option(LINK_CONSOLE "Builds Scorpion Anti-malware console and links the engine." OFF)

if (LINK_CONSOLE)
    message(STATUS "Building Scorpion Anti-malware console...")
    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/sam-console/)

    add_executable(${SAM_PROJECT_NAME} WIN32 
        ${CMAKE_CURRENT_SOURCE_DIR}/sam-console/main.cpp
    )

    message(STATUS "Linking Scorpion Anti-malware engine to the console...")
    target_link_libraries(${SAM_PROJECT_NAME} PRIVATE 
        ${SAM_ENGINE} 
        ${SAM_CONSOLE_PROJECT_NAME} 
    )

    target_include_directories(${SAM_PROJECT_NAME} PRIVATE 
        "${CMAKE_CURRENT_SOURCE_DIR}/sam-engine/"
    )

endif()
