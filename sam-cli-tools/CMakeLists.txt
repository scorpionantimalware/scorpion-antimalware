set(SAM_CLI_TOOLS "sam-cli-tools")

file(GLOB SAM_CLI_TOOLS_SRC_FILES 
    ${CMAKE_CURRENT_SOURCE_DIR}/clitoolsmain.h
    ${CMAKE_CURRENT_SOURCE_DIR}/clitoolsmain.cpp
)

# Safety check: Ensure that all the files exist.
foreach(file ${SAM_CLI_TOOLS_SRC_FILES})
    if(NOT EXISTS "${file}")
        message(FATAL_ERROR "File '${file}' does not exist!")
    endif()
endforeach()

add_executable(${SAM_CLI_TOOLS} ${SAM_CLI_TOOLS_SRC_FILES})

set_target_properties(${SAM_CLI_TOOLS} PROPERTIES VERSION ${SAM_PROJECT_VERSION})

target_link_libraries(${SAM_CLI_TOOLS} PRIVATE 
    ${SAM_ENGINE} 
)

# When we use any header inside ${SAM_CLI_TOOLS}, it must know where these headers are.
target_include_directories(${SAM_CLI_TOOLS} PRIVATE 
    "${CMAKE_CURRENT_SOURCE_DIR}/" 
)

# Specify the directory containing the shared libraries.
set(SAM_PE_ENGINE_BUILD_ROOTDIR "${PROJECT_BINARY_DIR}/sam-engine/PE-engine")
set(SAM_BYTE_PIXEL_ENGINE_BUILD_ROOTDIR "${PROJECT_BINARY_DIR}/sam-engine/byte-pixel-engine")
set(SAM_PE_PATHLS_GENERATOR_BUILD_ROOTDIR "${PROJECT_BINARY_DIR}/sam-engine/PE-pathls-generator")
set(SAM_SAM_MODELS_BUILD_ROOTDIR "${PROJECT_BINARY_DIR}/sam-engine/models")
set(SAM_SCAN_AREAS_PROCESSOR_BUILD_ROOTDIR "${PROJECT_BINARY_DIR}/sam-engine/scan-areas-processor")
set(SAM_SAM_ENGINE_BUILD_ROOTDIR "${PROJECT_BINARY_DIR}/sam-engine")

# TODO: Why copy_if_different isn't working?
# Copy the shared libraries to the executable directory.
file(GLOB SAM_DLLS 
    "${SAM_PE_ENGINE_BUILD_ROOTDIR}/Debug/${PE_ENGINE}.dll"
    "${SAM_BYTE_PIXEL_ENGINE_BUILD_ROOTDIR}/Debug/${BYTE_PIXEL_ENGINE}.dll"
    "${SAM_PE_PATHLS_GENERATOR_BUILD_ROOTDIR}/Debug/${PE_PATHLS_GENERATOR}.dll"
    "${SAM_SAM_MODELS_BUILD_ROOTDIR}/Debug/${SAM_MODELS}.dll"
    "${SAM_SAM_ENGINE_BUILD_ROOTDIR}/Debug/${SAM_ENGINE}.dll"
    "${SAM_SCAN_AREAS_PROCESSOR_BUILD_ROOTDIR}/Debug/${SCAN_AREAS_PROCESSOR}.dll"
)

# Safety check: Ensure that all the files exist.
foreach(file ${SAM_DLLS})
    if(NOT EXISTS "${file}")
        message(FATAL_ERROR "File '${file}' does not exist!")
    endif()
endforeach()

foreach(SAM_DLL ${SAM_DLLS})
    add_custom_command(TARGET ${SAM_CLI_TOOLS} POST_BUILD
                    COMMAND ${CMAKE_COMMAND} -E copy ${SAM_DLL} $<TARGET_FILE_DIR:${SAM_CLI_TOOLS}>
                    COMMENT "Copying ${SAM_DLL} to the executable directory."
    )
endforeach()

# Copy the onnx dlls to the executable directory.
if (MSVC)
    file(GLOB ORT_DLLS 
        "${SAM_ONNXRUNTIME_ROOTDIR}/lib/onnxruntime.dll"
        "${SAM_ONNXRUNTIME_ROOTDIR}/lib/onnxruntime_providers_shared.dll"
    )

    # Safety check: Ensure that all the files exist.
    foreach(file ${ORT_DLLS})
        if(NOT EXISTS "${file}")
            message(FATAL_ERROR "File '${file}' does not exist!")
        endif()
    endforeach()

    foreach(ORT_DLL ${ORT_DLLS})
        add_custom_command(TARGET ${SAM_CLI_TOOLS} POST_BUILD
                        COMMAND ${CMAKE_COMMAND} -E copy ${ORT_DLL}  $<TARGET_FILE_DIR:${SAM_CLI_TOOLS}>
                        COMMENT "Copying ${ORT_DLL} to the executable directory."
        )
    endforeach()
endif()

# Copy the model to the executable directory.
file(GLOB SAM_MODELS 
    "${SAM_STATIC_ANN_ONNX_MODELPATH}"
    "${SAM_STATIC_ANN_STANDARDIZE_PARAMS}"
    "${SAM_STATIC_CNN_ONNX_MODELPATH}"
    "${SAM_STATIC_CNN_COLORMAP}"
)

# Safety check: Ensure that all the files exist.
foreach(file ${SAM_MODELS})
    if(NOT EXISTS "${file}")
        message(FATAL_ERROR "File '${file}' does not exist!")
    endif()
endforeach()

foreach(SAM_MODEL ${SAM_MODELS})
    add_custom_command(TARGET ${SAM_CLI_TOOLS} POST_BUILD
                    COMMAND ${CMAKE_COMMAND} -E copy ${SAM_MODEL} $<TARGET_FILE_DIR:${SAM_CLI_TOOLS}>
                    COMMENT "Copying ${SAM_MODEL} to the executable directory."
    )
endforeach()
